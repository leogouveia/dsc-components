import { OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { AbstractControl, ControlValueAccessor, FormBuilder, FormControl, Validator } from '@angular/forms';
import { tamanhoTextAreaType } from '../../types/textAreaTypes';
import { TamanhoTextAreaEnum } from '../../enum/textAreaEnums';
import { Subscription } from 'rxjs';
export declare class DscTextAreaComponent implements OnInit, OnChanges, ControlValueAccessor, OnDestroy, Validator {
    private formBuilder;
    dscRotulo: string;
    dscRotulo_: string;
    dscInformacaoAdicional: string;
    dscInformacaoAdicional_: string;
    dscPlaceHolder: string;
    dscPlaceHolder_: string;
    dscTamanhoTextArea: tamanhoTextAreaType;
    dscTamanhoTextArea_: TamanhoTextAreaEnum;
    dscIconeInformativo?: string;
    dscIconeInformativo_?: string;
    dscTamanhoMaximo: number;
    dscIsContadorCaractere: boolean;
    dscTextoComplementar: string;
    formControlTextArea: FormControl;
    mapaTamanhoTextArea: Map<TamanhoTextAreaEnum, string>;
    mapaHeader: Map<TamanhoTextAreaEnum, string>;
    classeTextArea: string;
    classeHeader: string;
    classeDisable: string;
    classeBorda: string;
    onTouched: Function;
    onChangeSubs: Subscription[];
    constructor(formBuilder: FormBuilder);
    ngOnDestroy(): void;
    validate(control: AbstractControl): any;
    registerOnChange(onChange: any): void;
    setDisabledState(disabled: boolean): void;
    writeValue(value: any): void;
    registerOnTouched(onTouched: Function): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private tratarClassesDinamicas;
    private preencherMapaTamanhoTextArea;
    private preencherMapaHeader;
    escutarInputTratarBorda(): void;
}
